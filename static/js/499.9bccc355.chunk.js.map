{"version":3,"file":"static/js/499.9bccc355.chunk.js","mappings":"6LAAO,IAAMA,EAAW,gCACXC,EAAU,kC,kJCEVC,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAKxBC,GAASH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4S,SC8DlC,EAhEqB,WAAO,IAADI,EAAAC,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBjB,EAAe,QAAfC,EAACa,EAASI,aAAK,IAAAjB,OAAA,EAAdA,EAAgBkB,YAAI,IAAAnB,EAAAA,EAAI,KAS3D,OAPAoB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IACO,GAADC,OAAI/B,EAAAA,EAAQ,WAAA+B,OAAUpB,EAAO,aAAAoB,OAAY9B,EAAAA,IAC5C+B,MAAK,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAOhB,EAAgBgB,EAAK,IACxCC,OAAM,SAAAd,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,CAACV,KAGFyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACjC,EAAM,CAACkC,GAAIf,EAAoBgB,QAAQH,SAAC,YACxCjB,IAASkB,EAAAA,EAAAA,KAAA,KAAAD,SAAIjB,EAAMqB,UACnBzB,IACCmB,EAAAA,EAAAA,MAAClC,EAAW,CAAAoC,SAAA,EACVC,EAAAA,EAAAA,KAAA,OAAAD,SACGrB,EAAa0B,cACZJ,EAAAA,EAAAA,KAAA,OACEK,IAAG,kCAAAb,OAAoCd,EAAa0B,aACpDE,IAAK5B,EAAa6B,MAClBC,MAAM,aAIZX,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGrB,EAAa6B,MACb,KACA7B,EAAa+B,cACZ/B,EAAa+B,aAAaC,MAAM,EAAG,GACpC,QAEHb,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,eAAaY,KAAKC,MAAkC,GAA5BlC,EAAamC,cAAmB,QAC3Db,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIrB,EAAaoC,YACjBd,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SACGrB,EAAaqC,QACZrC,EAAaqC,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO,GAAG,aAKnDlB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAChC,EAAAA,GAAI,CAACiC,GAAG,OAAMF,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAChC,EAAAA,GAAI,CAACiC,GAAG,UAASF,SAAC,kBAGvBC,EAAAA,EAAAA,KAACmB,EAAAA,SAAQ,CAACC,UAAUpB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACxCC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,QAIf,C","sources":["api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '6681e5624145dca4e352c9384e101aaa';\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Description = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Button = styled(Link)`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: white;\n  width: 150px;\n  height: 30px;\n  /* border: 1px solid red; */\n  background-color: gray;\n  margin-bottom: 10px;\n  &:hover {\n    color: black;\n  }\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from 'api';\nimport { Description, Button } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(({ data }) => setMovieDetails(data))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button to={backLinkLocationRef.current}>Go back</Button>\n      {error && <p>{error.message}</p>}\n      {movieDetails && (\n        <Description>\n          <div>\n            {movieDetails.poster_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n                width=\"200px\"\n              />\n            )}\n          </div>\n          <div>\n            <h1>\n              {movieDetails.title}\n              {' ('}\n              {movieDetails.release_date &&\n                movieDetails.release_date.slice(0, 4)}\n              {')'}\n            </h1>\n            <p>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {movieDetails.genres &&\n                movieDetails.genres.map(i => i.name + ' ')}\n            </p>\n          </div>\n        </Description>\n      )}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n// import { API_KEY, BASE_URL } from 'api';\n// import axios from 'axios';\n// import { Suspense, useEffect, useRef, useState } from 'react';\n// import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n// import { Button, Description } from './MovieDetails.styled';\n\n// const MovieDetails = () => {\n//   const [movieDetails, setMovieDetails] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const { movieId } = useParams();\n\n//   const location = useLocation();\n//   const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n//   useEffect(() => {\n//     axios\n//       .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n//       .then(({ data }) => setMovieDetails(data))\n//       .catch(error => setError(error));\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       <Button to={backLinkLocationRef.current}>Go back</Button>\n//       {error && <p>{error.message}</p>}\n//       {movieDetails && (\n//         <Description>\n//           <div>\n//             {movieDetails.poster_path && (\n//               <img\n//                 src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n//                 alt={movieDetails.title}\n//                 width=\"200px\"\n//               />\n//             )}\n//           </div>\n//           <div>\n//             <h1>\n//               {movieDetails.title}\n//               {' ('}\n//               {movieDetails.release_date &&\n//                 movieDetails.release_date.slice(0, 4)}\n//               {')'}\n//             </h1>\n//             <p>User score: {Math.round(movieDetails.vote_average * 10)}%</p>\n//             <h2>Overview</h2>\n//             <p>{movieDetails.overview}</p>\n//             <h3>Genres</h3>\n//             <p>\n//               {movieDetails.genres &&\n//                 movieDetails.genres.map(i => i.name + ' ')}\n//             </p>\n//           </div>\n//         </Description>\n//       )}\n//       <p>Additional information</p>\n//       <ul>\n//         <li>\n//           <Link to=\"cast\">Cast</Link>\n//         </li>\n//         <li>\n//           <Link to=\"reviews\">Reviews</Link>\n//         </li>\n//       </ul>\n//       <Suspense fallback={<div>Loading...</div>}>\n//         <Outlet />\n//       </Suspense>\n//     </div>\n//   );\n// };\n\n// export default MovieDetails;\n"],"names":["BASE_URL","API_KEY","Description","styled","_templateObject","_taggedTemplateLiteral","Button","Link","_templateObject2","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","axios","concat","then","_ref","data","catch","_jsxs","_Fragment","children","_jsx","to","current","message","poster_path","src","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","i","name","Suspense","fallback","Outlet"],"sourceRoot":""}